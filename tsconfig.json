{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */
    /* Projects */
    /* Language and Environment */
    "target": "ES2019", /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "lib": [
      "ES5",
      "ES6"
    ], /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "experimentalDecorators": true, /* Enable experimental support for TC39 stage 2 draft decorators. */
    "emitDecoratorMetadata": true, /* Emit design-type metadata for decorated declarations in source files. */
    /* Modules */
    "module": "commonjs", /* Specify what module code is generated. */
    "moduleResolution": "node", /* Specify how TypeScript looks up a file from a given module specifier. */
    /* JavaScript Support */
    /* Emit */
    "declaration": true, /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    "sourceMap": true, /* Create source map files for emitted JavaScript files. */
    "outDir": "./build", /* Specify an output folder for all emitted files. */
    "importHelpers": true, /* Allow importing helper functions from tslib once per project, instead of including them per-file. */
    "downlevelIteration": true, /* Emit more compliant, but verbose and less performant JavaScript for iteration. */
    "stripInternal": true, /* Disable emitting declarations that have '@internal' in their JSDoc comments. */
    "allowSyntheticDefaultImports": true, /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true, /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */
    /* Type Checking */
    "strict": true, /* Enable all strict type-checking options. */
    "noImplicitAny": true, /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true, /* When type checking, take into account 'null' and 'undefined'. */
    "strictPropertyInitialization": false, /* Check for class properties that are declared but not set in the constructor. */
  },
  "include": [
    "src/**/*"
  ],
  "exclude": [
    "node_modules",
    "build"
  ],
  "ts-node": {
    "files": true
  }
}